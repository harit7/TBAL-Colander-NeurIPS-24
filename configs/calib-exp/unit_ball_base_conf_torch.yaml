
random_seed : 1
device: 'cuda:0'
lib: "pytorch"

data_conf: 
  name: "unif_unit_ball"
  train_set_size: 10000
  dimension: 30
  val_fraction: 0.4
  num_classes: 2
  test_set_size: 4000
  random_state: 0
  decision_boundary: 'Linear'

model_conf:
  name: "binary_logistic_regression"
  input_dimension: 30
  num_classes: 2
  fit_intercept: False
  lib: "pytorch"

training_conf:
  loss_function: std_cross_entropy
  optimizer: "sgd"
  momentum: 0.9
  weight_decay: 0.0001

  learning_rate: 0.1
  loss_tolerance: 1e-6
  max_epochs: 40
  normalize_weights: False
  batch_size: 64
  train_err_tol: -1
  ckpt_load_path: None  
  ckpt_save_path: None
  train_from_scratch: True
  train_from_ckpt: False


inference_conf:

train_pts_query_conf:
  seed_train_size: 32
  query_batch_size: 16
  query_strategy_name: "margin_random_v2" 
  margin_random_v2_constant: 2
  max_num_train_pts: 500

val_pts_query_conf:
  query_strategy_name: "random"
  max_num_val_pts : 2000

calib_conf: None 
 
auto_lbl_conf:
  method_name: "selective"  # options "all" | "selective"
  #score_type: "abs_logit"  # options "confidence" | "margin"
  score_type: "confidence"
  class_wise: "independent" # options "joint" | "independent" #makes sense only when using selective 
  auto_label_err_threshold: 0.01 # only for method_name: "selective"
  C_1: 0.25
  ucb: 'sigma'

stopping_criterion: "max_num_train_pts"
store_model_weights_in_mem: False
